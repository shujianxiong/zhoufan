<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinazhoufan.admin.modules.lgt.dao.po.PurchaseProduceDao">
        
	<sql id="purchaseProduceColumns">
		a.id AS "id",
		a.purchase_order_id AS "purchaseOrder.id",
		a.produce_id AS "produce.id",
		a.required_num AS "requiredNum",
		a.reality_num AS "realityNum",
		a.reality_price AS "realityPrice",
		
		a.in_num    AS "inNum",
		a.back_num       AS "backNum",
		a.gold_price     AS "goldPrice",
		a.loss_fee      AS "lossFee", 
		a.gold_weight    AS "goldWeight",
		a.main_stone_weight     AS "mainStoneWeight", 
		a.main_stone_price    AS "mainStonePrice",   
		a.subsidiary_stone_weight    AS "subsidiaryStoneWeight",
		a.subsidiary_stone_price     AS "subsidiaryStonePrice",
		a.work_fee       AS "workFee",
		a.inlay_fee      AS "inlayFee",
		a.inlay_num      AS "inlayNum",
		a.templet_fee    AS "templetFee",
		
		a.electrolytic_gold_crafts AS "electrolyticGoldCrafts",
        
        a.electrolytic_gold_colour AS "electrolyticGoldColour",
        
        a.electrolytic_gold_thickness AS "electrolyticGoldThickness",
        
        a.electrolytic_gold_price AS "electrolyticGoldPrice", 
		
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		c.price_purchase AS "produce.pricePurchase"
	</sql>
	
	<sql id="purchaseProduceAndProduceColumns">
		a.id AS "id",
		a.purchase_order_id AS "purchaseOrder.id",
		a.produce_id AS "produce.id",
		a.required_num AS "requiredNum",
		a.reality_num AS "realityNum",
		a.reality_price AS "realityPrice",
		
		a.in_num    AS "inNum",
        a.back_num       AS "backNum",
        a.gold_price     AS "goldPrice",
        a.loss_fee      AS "lossFee", 
        a.gold_weight    AS "goldWeight",
        a.main_stone_weight     AS "mainStoneWeight", 
        a.main_stone_price    AS "mainStonePrice",   
        a.subsidiary_stone_weight    AS "subsidiaryStoneWeight",
        a.subsidiary_stone_price     AS "subsidiaryStonePrice",
        a.work_fee       AS "workFee",
        a.inlay_fee      AS "inlayFee",
        a.inlay_fee      AS "inlayFee",
        a.templet_fee    AS "templetFee",
		
		a.electrolytic_gold_crafts AS "electrolyticGoldCrafts",
        
        a.electrolytic_gold_colour AS "electrolyticGoldColour",
        
        a.electrolytic_gold_thickness AS "electrolyticGoldThickness",
        
        a.electrolytic_gold_price AS "electrolyticGoldPrice", 
		
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		p.code AS "produce.code",
		p.name AS "produce.name",
		g.code AS "produce.goods.code",
		g.name AS "produce.goods.name",
		g.icon AS "produce.goods.icon",
		g.photo AS "produce.goods.photo"
	</sql>
	
	<sql id="purchaseProduceJoins">
		LEFT JOIN lgt_po_purchase_order b ON b.id = a.purchase_order_id
		LEFT JOIN lgt_ps_produce c ON a.produce_id =c.id
	</sql>
	
	<sql id="purchaseProduceAndProduceJoins">
		LEFT JOIN lgt_po_purchase_order b ON b.id = a.purchase_order_id
		LEFT JOIN lgt_ps_produce p on p.id = a.produce_id
		LEFT JOIN lgt_ps_goods g on g.id = p.goods_id
	</sql>
    
	<select id="get" resultType="PurchaseProduce">
		SELECT 
			<include refid="purchaseProduceColumns"/>
		FROM lgt_po_purchase_produce a
		<include refid="purchaseProduceJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getPurchaseProduceAndProduce" resultType="PurchaseProduce">
		SELECT 
			<include refid="purchaseProduceAndProduceColumns"/>
		FROM lgt_po_purchase_produce a
		<include refid="purchaseProduceAndProduceJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PurchaseProduce">
		SELECT 
			<include refid="purchaseProduceColumns"/>
		FROM lgt_po_purchase_produce a
		<include refid="purchaseProduceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="purchaseOrder != null and purchaseOrder.id != null and purchaseOrder.id != ''">
				AND a.purchase_order_id = #{purchaseOrder.id}
			</if>
			<if test="produce != null and produce.id != null and produce.id != ''">
				AND a.produce_id = #{produce.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PurchaseProduce">
		SELECT 
			<include refid="purchaseProduceColumns"/>
		FROM lgt_po_purchase_produce a
		<include refid="purchaseProduceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insertList">
		INSERT INTO lgt_po_purchase_produce(
			id,
			purchase_order_id,
			produce_id,
			required_num,
			reality_num,
			reality_price,
			
			electrolytic_gold_crafts,
        
            electrolytic_gold_colour,
        
            electrolytic_gold_thickness,
        
            electrolytic_gold_price, 
			
			in_num,
	        back_num,
	        gold_price,
	        loss_fee, 
	        gold_weight,
	        main_stone_weight, 
	        main_stone_price ,   
	        subsidiary_stone_weight,
	        subsidiary_stone_price,
	        work_fee,
	        inlay_fee,
	        inlay_num,
	        templet_fee ,
			
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES 
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id},
			#{item.purchaseOrder.id},
			#{item.produce.id},
			#{item.requiredNum},
			#{item.realityNum},
			#{item.realityPrice},
			
			
            #{electrolyticGoldCrafts},
        
            #{electrolyticGoldColour},
        
            #{electrolyticGoldThickness},
        
            #{electrolyticGoldPrice}, 
			
			#{item.inNum},
            #{item.backNum},
            #{item.goldPrice},
            #{item.lossFee}, 
            #{item.goldWeight},
            #{item.mainStoneWeight}, 
            #{item.mainStonePrice} ,   
            #{item.subsidiaryStoneWeight},
            #{item.subsidiaryStonePrice},
            #{item.workFee},
            #{item.inlayFee},
            #{item.inlayNum},
            #{item.templetFee} ,
			
			#{item.createBy.id},
			#{item.createDate},
			#{item.updateBy.id},
			#{item.updateDate},
			#{item.remarks},
			#{item.delFlag}
			)  
		</foreach>
	</insert>
	
	<insert id="insert">
		INSERT INTO lgt_po_purchase_produce(
			id,
			purchase_order_id,
			produce_id,
			required_num,
			reality_num,
			reality_price,
			
			electrolytic_gold_crafts,
        
            electrolytic_gold_colour,
        
            electrolytic_gold_thickness,
        
            electrolytic_gold_price, 
			
			in_num,
            back_num,
            gold_price,
            loss_fee, 
            gold_weight,
            main_stone_weight, 
            main_stone_price ,   
            subsidiary_stone_weight,
            subsidiary_stone_price,
            work_fee,
            inlay_fee,
            inlay_num,
            templet_fee ,
			
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{purchaseOrder.id},
			#{produce.id},
			#{requiredNum},
			#{realityNum},
			#{realityPrice},
			
			#{electrolyticGoldCrafts},
        
            #{electrolyticGoldColour},
        
            #{electrolyticGoldThickness},
        
            #{electrolyticGoldPrice}, 
			
			#{inNum},
            #{backNum},
            #{goldPrice},
            #{lossFee}, 
            #{goldWeight},
            #{mainStoneWeight}, 
            #{mainStonePrice} ,   
            #{subsidiaryStoneWeight},
            #{subsidiaryStonePrice},
            #{workFee},
            #{inlayFee},
            #{inlayNum},
            #{templetFee} ,
			
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE lgt_po_purchase_produce SET 	
			purchase_order_id = #{purchaseOrder.id},
			produce_id = #{produce.id},
			required_num = #{requiredNum},
			reality_num = #{realityNum},
			reality_price = #{realityPrice},
			
			electrolytic_gold_crafts = #{electrolyticGoldCrafts},
        
            electrolytic_gold_colour = #{electrolyticGoldColour},
        
            electrolytic_gold_thickness = #{electrolyticGoldThickness},
        
            electrolytic_gold_price = #{electrolyticGoldPrice}, 
			
			in_num = #{inNum},
            back_num = #{backNum},
            gold_price = #{goldPrice},
            loss_fee = #{lossFee}, 
            gold_weight = #{goldWeight},
            main_stone_weight = #{mainStoneWeight}, 
            main_stone_price  = #{mainStonePrice},   
            subsidiary_stone_weight = #{subsidiaryStoneWeight},
            subsidiary_stone_price = #{subsidiaryStonePrice},
            work_fee = #{workFee},
            inlay_fee = #{inlayFee},
            inlay_num = #{inlayNum},
            templet_fee  = #{templetFee},
			
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE lgt_po_purchase_produce SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE purchase_id = #{purchase.id}
			</otherwise>
		</choose>
	</update>
	
	<delete id="remove">
		DELETE FROM lgt_po_purchase_produce WHERE id = #{id}
	</delete>
	
	<delete id="removeByPurchaseOrder">
		DELETE FROM lgt_po_purchase_produce WHERE purchase_order_id = #{id}
	</delete>
	
	<update id="updatePurchaseProduceRealtyNum">
	   UPDATE lgt_po_purchase_produce SET in_num = IFNULL(in_num, 0) + #{inNum}, back_num = IFNULL(back_num, 0) + #{backNum}, reality_num = IFNULL(reality_num, 0) + #{realityNum} WHERE id = #{id}
	</update>
	
</mapper>