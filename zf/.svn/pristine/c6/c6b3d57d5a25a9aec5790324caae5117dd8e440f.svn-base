<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinazhoufan.admin.modules.bas.dao.FileLibraryDao">
    
	<sql id="fileLibraryColumns">
		a.id AS "id",
		a.name AS "name",
		a.type AS "type",
		a.file_dir_id AS "fileDir.id",
		a.supplier_id AS "supplier.id",
		a.brand_id AS "brand.id",
		a.designer_id AS "designer.id",
		a.category_id AS "category.id",
		a.goods_id AS "goods.id",
		a.file_url AS "fileUrl",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="findColumns">
		a.id AS "id",
		a.name AS "name",
		a.type AS "type",
		a.file_dir_id AS "fileDir.id",
		fd.name AS "fileDir.name",
		a.supplier_id AS "supplier.id",
		b.name AS "supplier.name",
		a.brand_id AS "brand.id",
		c.name AS "brand.name",
		a.designer_id AS "designer.id",
		d.name AS "designer.name",
		a.category_id AS "category.id",
		e.category_name AS "category.categoryName",
		a.goods_id AS "goods.id",
		a.file_url AS "fileUrl",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		pp.pid 				AS "fileProps.property.id",
		p.prop_name 		AS "fileProps.property.propName",
		p.prop_type 		AS "fileProps.property.propType",
		p.suit_type 		AS "fileProps.property.suitType",
		p.value_type 		AS "fileProps.property.valueType",
		p.necessary_flag	AS "fileProps.property.necessaryFlag",
		p.produce_flag 		AS "fileProps.property.produceFlag",
		p.order_no 			AS "fileProps.property.orderNo",
		pp.pvid 			AS "fileProps.propvalue.id",
		pv.pvalue_name 		AS "fileProps.propvalue.pvalueName",
		pv.pvalue_nickname 	AS "fileProps.propvalue.pvalueNickname"
	</sql>
	
	<sql id="fileLibraryJoins">
	   LEFT JOIN bas_file_dir d ON d.id = a.file_dir_id
	</sql>
    
	<select id="get" resultType="FileLibrary">
		SELECT 
			<include refid="fileLibraryColumns"/>
		FROM bas_file_library a
		<include refid="fileLibraryJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="find" resultMap="FileMap">
		SELECT 
			<include refid="findColumns"/>
		FROM bas_file_library a
		LEFT JOIN lgt_si_supplier b on b.id=a.supplier_id
		LEFT JOIN lgt_bs_brand c on c.id=a.brand_id
		LEFT JOIN lgt_bs_designer d on d.id=a.designer_id
		LEFT JOIN lgt_ps_category e on e.id=a.category_id
		LEFT JOIN bas_file_prop pp ON pp.file_id=a.id
		LEFT JOIN lgt_ps_property p ON p.id=pp.pid
		LEFT JOIN lgt_ps_propvalue pv ON pv.id=pp.pvid
		LEFT JOIN bas_file_dir fd ON fd.id = a.file_dir_id
		WHERE a.id = #{id}
	</select>
	
	<resultMap id="FileAndPropertyMap" type="com.chinazhoufan.admin.modules.bas.entity.FileLibrary">
		<result column="id" 			property="id"/>
		<result column="name" 			property="name"/>
		<result column="type" 			property="type"/>
		<result column="fileDir.id"     property="fileDir.id"/>
		<result column="supplier.id" 	property="supplier.id"/>
		<result column="brand.id" 		property="brand.id"/>
		<result column="designer.id" 	property="designer.id"/>
		<result column="category.id" 	property="category.id"/>
		<result column="goods.id" 		property="goods.id"/>
		<result column="fileUrl" 		property="fileUrl"/>
		<result column="createBy.id" 	property="createBy.id"/>
		<result column="createDate" 	property="createDate"/>
		<result column="updateBy.id" 	property="updateBy.id"/>
		<result column="updateDate" 	property="updateDate"/>
		<result column="remarks" 		property="remarks"/>
		<result column="delFlag" 		property="delFlag"/>
		<collection property="fileProps" javaType="ArrayList" ofType="FileProp">
			<result column="fileProps.property.id" 			property="property.id"/>
			<result column="fileProps.property.propName" 		property="property.propName"/>
			<result column="fileProps.property.propType" 		property="property.propType"/>
			<result column="fileProps.property.suitType" 		property="property.suitType"/>
			<result column="fileProps.property.valueType" 		property="property.valueType"/>
			<result column="fileProps.property.necessaryFlag"	property="property.necessaryFlag"/>
			<result column="fileProps.property.produceFlag" 	property="property.produceFlag"/>
			<result column="fileProps.property.orderNo" 		property="property.orderNo"/>
			<result column="fileProps.propvalue.id" 			property="propvalue.id"/>
			<result column="fileProps.propvalue.pvalueName" 	property="propvalue.pvalueName"/>
			<result column="fileProps.propvalue.pvalueNickname"	property="propvalue.pvalueNickname"/>
			<result column="fileProps.propvalue.pvalue" 		property="propvalue.pvalue"/>
			<result column="fileProps.pvalue" 					property="pvalue"/>
		</collection>
	</resultMap>
	
	
	<resultMap id="FileMap" type="com.chinazhoufan.admin.modules.bas.entity.FileLibrary">
		<result column="id" 			property="id"/>
		<result column="name" 			property="name"/>
		<result column="type" 			property="type"/>
		<result column="fileDir.id"     property="fileDir.id"/>
		<result column="fileDir.name"   property="fileDir.name"/>
		<result column="supplier.id" 	property="supplier.id"/>
		<result column="supplier.name" 	property="supplier.name"/>
		<result column="brand.id" 		property="brand.id"/>
		<result column="brand.name" 	property="brand.name"/>
		<result column="designer.id" 	property="designer.id"/>
		<result column="designer.name" 	property="designer.name"/>
		<result column="category.id" 	property="category.id"/>
		<result column="category.categoryName" 	property="category.categoryName"/>
		<result column="goods.id" 		property="goods.id"/>
		<result column="fileUrl" 		property="fileUrl"/>
		<result column="createBy.id" 	property="createBy.id"/>
		<result column="createDate" 	property="createDate"/>
		<result column="updateBy.id" 	property="updateBy.id"/>
		<result column="updateDate" 	property="updateDate"/>
		<result column="remarks" 		property="remarks"/>
		<result column="delFlag" 		property="delFlag"/>
		<collection property="fileProps" javaType="ArrayList" ofType="FileProp">
			<result column="fileProps.property.id" 				property="property.id"/>
			<result column="fileProps.property.propName" 		property="property.propName"/>
			<result column="fileProps.property.propType" 		property="property.propType"/>
			<result column="fileProps.property.suitType" 		property="property.suitType"/>
			<result column="fileProps.property.valueType" 		property="property.valueType"/>
			<result column="fileProps.property.necessaryFlag"	property="property.necessaryFlag"/>
			<result column="fileProps.property.produceFlag" 	property="property.produceFlag"/>
			<result column="fileProps.property.orderNo" 		property="property.orderNo"/>
			<result column="fileProps.propvalue.id" 			property="propvalue.id"/>
			<result column="fileProps.propvalue.pvalueName" 	property="propvalue.pvalueName"/>
			<result column="fileProps.pvalue" 					property="pvalue"/>
		</collection>
	</resultMap>
	
	<select id="findFileAndPropertyById" resultMap="FileAndPropertyMap">
		SELECT 
			a.id 			AS "id",
			a.name 			AS "name",
			a.type 			AS "type",
			a.file_dir_id   AS "fileDir.id",
			a.supplier_id 	AS "supplier.id",
			a.brand_id 		AS "brand.id",
			a.designer_id 	AS "designer.id",
			a.category_id 	AS "category.id",
			a.goods_id 		AS "goods.id",
			a.file_url 		AS "fileUrl",
			a.create_by 	AS "createBy.id",
			a.create_date	AS "createDate",
			a.update_by 	AS "updateBy.id",
			a.update_date 	AS "updateDate",
			a.remarks 		AS "remarks",
			a.del_flag 		AS "delFlag",
			pp.pid 				AS "fileProps.property.id",
			p.prop_name 		AS "fileProps.property.propName",
			p.prop_type 		AS "fileProps.property.propType",
			p.suit_type 		AS "fileProps.property.suitType",
			p.value_type 		AS "fileProps.property.valueType",
			p.necessary_flag	AS "fileProps.property.necessaryFlag",
			p.produce_flag 		AS "fileProps.property.produceFlag",
			p.order_no 			AS "fileProps.property.orderNo",
			pp.pvid 			AS "fileProps.propvalue.id",
			pv.pvalue_name 		AS "fileProps.propvalue.pvalueName",
			pv.pvalue_nickname	AS "fileProps.propvalue.pvalueNickname",
			pp.pvalue 			AS "fileProps.pvalue"
		FROM bas_file_library a
		LEFT JOIN bas_file_prop pp ON pp.file_id=a.id
		LEFT JOIN lgt_ps_property p ON p.id=pp.pid
		LEFT JOIN lgt_ps_propvalue pv ON pv.id=pp.pvid
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="FileLibrary">
		SELECT 
			<include refid="fileLibraryColumns"/>
		FROM bas_file_library a
<!-- 		<if test="fileProps != null and fileProps.size >0"> -->
<!-- 			LEFT JOIN bas_file_prop b ON b.file_id=a.id -->
<!-- 		</if> -->
		<include refid="fileLibraryJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name=#{name}
			</if>
			<if test="searchParameter.starTime != null and searchParameter.starTime != ''">
				<![CDATA[
					AND a.create_date>=#{searchParameter.starTime}
				]]>
			</if>
			<if test="searchParameter.endTime != null and searchParameter.endTime != ''">
				<![CDATA[
					AND a.create_date<=#{searchParameter.endTime}
				]]>
			</if>
			<if test="category!=null and category.id != null and category.id != ''">
				AND a.category_id=#{category.id}
			</if>
			<if test="supplier!=null and supplier.id != null and supplier.id != ''">
				AND a.supplier_id=#{supplier.id}
			</if>
			<if test="brand!=null and brand.id != null and brand.id != ''">
				AND a.brand_id=#{brand.id}
			</if>
			<if test="designer!=null and designer.id != null and designer.id != ''">
				AND a.designer_id=#{designer.id}
			</if>
			<if test="fileDir != null">
			    <if test="fileDir.id != null and fileDir.id != ''">
			    	AND a.file_dir_id = #{fileDir.id}
			    </if>
			    <if test="fileDir.type != null and fileDir.type != ''">
			    	AND d.type = #{fileDir.type}
			    </if>
			</if>
			<if test="createBy != null and createBy.id != null and createBy.id != ''">
			    AND a.create_by = #{createBy.id}
			</if>
			<if test="fileProps != null and fileProps.size >0">
				AND
				<foreach collection="fileProps" item="item" index="index" separator=" AND ">
					EXISTS (SELECT 1 FROM bas_file_prop pp WHERE pp.file_id=a.id
					<choose>
						<when test="item.pvalue!=null and item.pvalue!=''">
							AND pp.pvalue=#{item.pvalue}
						</when>
						<otherwise>
							AND pp.pvid=#{item.propvalue.id} 
						</otherwise>
					</choose>
					)
				</foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="FileLibrary">
		SELECT 
			<include refid="fileLibraryColumns"/>
		FROM bas_file_library a
		<include refid="fileLibraryJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findByFileUrl" resultType="FileLibrary">
		SELECT 
			<include refid="fileLibraryColumns"/>
		FROM bas_file_library a
		WHERE a.file_url = #{fileUrl} ORDER BY a.update_date DESC
	</select>
	
	<insert id="insert">
		INSERT INTO bas_file_library(
			id,
			name,
			type,
			file_dir_id,
			supplier_id,
			brand_id,
			designer_id,
			category_id,
			goods_id,
			file_url,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{type},
			#{fileDir.id},
			#{supplier.id},
			#{brand.id},
			#{designer.id},
			#{category.id},
			#{goods.id},
			#{fileUrl},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE bas_file_library SET 	
			name = #{name},
			type = #{type},
			file_dir_id = #{fileDir.id},
			supplier_id = #{supplier.id},
			brand_id = #{brand.id},
			designer_id = #{designer.id},
			category_id = #{category.id},
			goods_id = #{goods.id},
			file_url = #{fileUrl},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<delete id="delete">
		DELETE FROM bas_file_library WHERE id = #{id}
	</delete>
	
</mapper>