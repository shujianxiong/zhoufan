package com.chinazhoufan.admin.modules.express.web.sf;

import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringEscapeUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.chinazhoufan.admin.common.utils.StringUtils;
import com.chinazhoufan.admin.common.web.BaseController;
import com.chinazhoufan.admin.modules.bus.entity.oe.ExperienceOrder;
import com.chinazhoufan.admin.modules.bus.entity.ol.SendOrder;
import com.chinazhoufan.admin.modules.bus.service.oe.ExperienceOrderService;
import com.chinazhoufan.admin.modules.bus.service.ol.SendOrderService;
import com.chinazhoufan.admin.modules.express.utils.SFUtils;
import com.chinazhoufan.admin.modules.lgt.entity.tn.ExpressAppointRecord;
import com.chinazhoufan.admin.modules.lgt.entity.tn.ExpressInfoRecord;
import com.chinazhoufan.admin.modules.lgt.service.tn.ExpressAppointRecordService;
import com.chinazhoufan.admin.modules.lgt.service.tn.ExpressInfoRecordService;

/**
 * 顺丰通知接口
 * @author liuxiaodong
 * @date 2017-11-15
 */
@Controller
@RequestMapping("/sf")
public class SFController extends BaseController {

	@Autowired
	private SendOrderService sendOrderService;
	@Autowired
	private ExperienceOrderService experienceOrderService;
	@Autowired
	private ExpressAppointRecordService expressAppointRecordService;
	@Autowired
	private ExpressInfoRecordService expressInfoRecordService;

    @RequestMapping(value = "/routePushCall")
    @ResponseBody
    public String routePushCall(@RequestParam("content")String content, HttpServletRequest request){

        logger.info("-------------------顺丰参数获取-------------------");

        content = StringEscapeUtils.unescapeXml(content);
        logger.info(content);
        try {
            List<ExpressInfoRecord> list = SFUtils.resolveRoute(content);
            if (list==null||list.isEmpty()){
                return returnXML("参数为空！");
            }else {
                logger.info(list.toString());
                for (ExpressInfoRecord expressInfoRecord : list) {
                    String  sendOrderNo  = expressInfoRecord.getExpressOrderId();
                    SendOrder sendOrder = sendOrderService.getBySendOrderNo(sendOrderNo);
                    ExperienceOrder experienceOrder	 = experienceOrderService.get(sendOrder.getOrderId());
                    if (experienceOrder == null) {
                        return returnXML("未找到对应订单");
                    } else {
                    /*签收时更新订单状态为已签收*/
                        if ("80".equals(expressInfoRecord.getStatus())){
                            //只有体验单才做确认送达
                            if(SendOrder.ORDERTYPE_EXPERIENCE.equals(sendOrder.getOrderType())){
                                //设置体验时间,次日的零点
                                Calendar cal = Calendar.getInstance();
                                cal.setTime(new Date());
                                cal.set(Calendar.HOUR_OF_DAY, 0);
                                cal.set(Calendar.MINUTE, 0);
                                cal.set(Calendar.SECOND, 0);
                                cal.set(Calendar.MILLISECOND, 0);
                                cal.add(Calendar.DAY_OF_MONTH, 1);
                                Date realExpDate = cal.getTime();
                                experienceOrderService.updateOrderStatusByExpress(realExpDate,sendOrder.getOrderNo(), ExperienceOrder.EXPRESS_SIGNED);
                            }
                            //对应发货单状态更新成签收
                            sendOrder.setStatus(SendOrder.STATUS_SIGNED);
                            sendOrderService.save(sendOrder);
                        }else if("33".equals(expressInfoRecord.getStatus())){
                            experienceOrderService.updateOrderStatusByExpress(null,sendOrder.getOrderNo(), ExperienceOrder.EXPRESS_FAILED);
                        }
                        expressInfoRecord.setMember(experienceOrder.getMember());
                        expressInfoRecord.setOrderType(sendOrder.getOrderType());
                        expressInfoRecord.setOrderId(experienceOrder.getId());
                        expressInfoRecord.setStatus(expressInfoRecord.getStatus());
                        expressInfoRecord.setSendOrderType(sendOrder.getType());
                        expressInfoRecord.setStatusDescription(expressInfoRecord.getStatusDescription());
                        expressInfoRecord.setTime(new Date());
                        expressInfoRecordService.save(expressInfoRecord);
                        return returnXML(null);
                    }
                }
            }
        }catch (Exception e){
            return returnXML(e.getMessage());
        }
        return returnXML("参数错误！");
    }


    private String returnXML(String message) {
        if (StringUtils.isNotBlank(message)) {
            return "<Response service=\"RoutePushService\" lang=\"zh-CN\"><Head>ERR</Head><ERROR code=\"4001\">"+message+"</ERROR></Response>";
        }else {
            return "<Response service=\"RoutePushService\" lang=\"zh-CN\"><Head>OK</Head></Response>";
        }
    }

   /* public static void main(String[] args){
        String   xml="<Request service='OrderService' lang='zh-CN'>\n" +
                "<Head>%apiCode</Head>\n" +
                "<Body>\n" +
                "<Order orderid = '%orderId'\n" +
                "j_contact='会员' j_tel='%sendTel' j_mobile='%sendTel'\n" +
                "j_province=%sendProv j_city=%sendCity j_county=%sendCounty\n" +
                "j_address='%sendAddress'\n" +
                "d_company=''\n" +
                "custid='%custid'\n"+
                "d_contact='%expressReceiverName' d_tel='%expressReceiverPhone' d_mobile='%expressReceiverPhone'\n" +
                "d_province='%expressReceiverProv' d_city='%expressReceiverCity' d_county='%expressReceiverDistrict'\n" +
                "d_address='%expressReceiverAddress'\n" +
                "express_type ='1'\n" +
                "pay_method ='1'\n" +
                "sendstarttime ='%sendStartTime'\n" +
                "remark = '%remarks'>\n" +
                "%Cargos\n" +
                "</Order>\n" +
                "</Body></Request>";

        String reverseXml = "<Request service='OrderReverseService' lang='zh-CN'>\n" +
                "<Head>HZZFKJ</Head>\n" +
                "<Body>\n" +
                "<Order orderid=\"ZF10160423123045\" j_company=\"唯品会\" j_contact=\"代运营\" j_tel=\"020-28351154\" j_mobile=\"020-28351154\" j_province=\"广东省\" j_city=\"广州市\" j_county=\"荔湾区\" j_address=\"长堤街7号\" d_company=\"个人\" d_contact=\"testczc \" d_tel=\"15820370000\" d_mobile=\"15820370000\" d_province=\"上海市\" d_city=\"上海市\" d_county=\"静安区\" d_address=\"啦啦啦啦啦啦\" express_type=\"1\" pay_method=\"3\" custid=\"9999999999\" parcel_quantity=\"1\" cargo_total_weight=\"1\" sendstarttime=\"2017-11-02 15:49:32\" order_souce=\"唯品会\" remark=\"\">\n" +
                "<Cargo name=\"KROOLEY JOGGJEANS 0685G\" count=\"1\" unit=\"件\" weight=\"0.0000\" amount=\"999999.0000\" currency=\"CNY\" source_area=\"中国\"/>\n" +
                "<AddedService name='INSURE' value='9999'></AddedService>\n" +
                "</Order></Body></Request>";

        String Cargos = null;
        for(int i=0;i<3;i++){
            String itemXml="<Cargo name='%itemName' \n" +
                    "count='%itemNumber' unit='件' \n" +
                    "currency='CNY' source_area='中国'></Cargo>\n";
            itemXml=itemXml.replace("%itemName", "戒指"+i);
            itemXml=itemXml.replace("%itemNumber", i+"");
            Cargos+=itemXml;
        }
        xml=xml.replace("%apiCode", SFConfig.API_CODE);
        xml=xml.replace("%custid", SFConfig.CUSTID);
        xml=xml.replace("%orderId", "ZF122321312263432");
        xml=xml.replace("%sendTel", "13812341234");
        xml=xml.replace("%sendAddress", "浙江省杭州市拱墅区小河路480号");
        xml=xml.replace("%expressReceiverName", "周范科技");
        xml=xml.replace("%expressReceiverPhone", "13513241234");
        xml=xml.replace("%expressReceiverProv", "浙江省");
        xml=xml.replace("%expressReceiverCity", "杭州市");
        xml=xml.replace("%expressReceiverDistrict", "拱墅区");
        xml=xml.replace("%expressReceiverAddress", "浙江省杭州市拱墅区小河路480号");


        xml=xml.replace("%sendStartTime", "2017-11-07 12:00:00");
        xml=xml.replace("%Cargos", Cargos);
        xml=xml.replace("%remark", "hahah");

        try {
            System.out.println(ExpressUtil.generateData(reverseXml, SFConfig.API_CHECKWORD));

            String result1 = HttpTool.post(SFConfig.API_URL, "xml="+xml+"&verifyCode="+ExpressUtil.generateData(xml, SFConfig.API_CHECKWORD));

//          String result = HttpTool.post(SFConfig.API_URL, "xml="+reverseXml+"&verifyCode="+ExpressUtil.generateData(reverseXml, SFConfig.API_CHECKWORD));

//          System.out.println(SFUtils.resolveResponse(result));

        } catch (Exception e) {
            e.printStackTrace();
        }

    }*/
}
