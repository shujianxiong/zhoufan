<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinazhoufan.admin.modules.crm.dao.mi.MemberDao">
    
	<sql id="memberColumns">
		a.id 					AS "id",
		a.usercode 				AS "usercode",
		a.wechat_code 			AS "wechatCode",
		a.wechat_openid 		AS "wechatOpenid",
		a.member_code 			AS "memberCode",
		a.level 				AS "level",
		a.type 					AS "type",
		a.password 				AS "password",
		a.password_pay 			AS "passwordPay",
		a.nickname 				AS "nickname",
		a.gravatar 				AS "gravatar",
		a.sex 					AS "sex",
		a.birthday 				AS "birthday",
		a.age 					AS "age",
		a.job 					AS "job",
		a.income 				AS "income",
		a.sign 					AS "sign",
		a.mobile 				AS "mobile",
		a.email 				AS "email",
		a.name 					AS "name",
		a.id_card 				AS "idCard",
		a.company 				AS "company",
		a.register_platform 	AS "registerPlatform",
		a.register_time 		AS "registerTime",
		a.recommend_member_id 	AS "recommendMember.id",
		a.member_status 		AS "memberStatus",
		a.usercode_status 		AS "usercodeStatus",
		a.blackwhite_status 	AS "blackwhiteStatus",
		a.blackwhite_remark 	AS "blackwhiteRemark",
		a.point 				AS "point",
		a.level_point			AS "levelPoint",
		a.credit 				AS "credit",
		a.create_by 			AS "createBy.id",
		a.create_date 			AS "createDate",
		a.update_by 			AS "updateBy.id",
		a.update_date 			AS "updateDate",
		a.remarks 				AS "remarks",
		a.arrearage_remark 		AS "arrearageRemark",
		a.del_flag 				AS "delFlag"
	</sql>
	
	<sql id="memberJoins">
	</sql>
    
	<select id="get" resultType="Member">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		<include refid="memberJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<!-- 通过ID查询会员（forUpdate锁表） -->
	<select id="getForUpdate" resultType="Member">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		<include refid="memberJoins"/>
		WHERE a.id = #{id}
		FOR UPDATE
	</select>
	
	<!-- 通过usercode查询会员 -->
	<select id="getByUsercode" resultType="Member">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		<include refid="memberJoins"/>
		WHERE a.usercode = #{usercode}
	</select>
	
	<!-- 通过微信openid查询会员 -->
	<select id="getByWechatOpenid" resultType="Member">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		<include refid="memberJoins"/>
		WHERE a.wechat_openid = #{wechatOpenid}
	</select>
	
	<!-- 根据memberId查询简短信息 -->
	<select id="getShortInfo" parameterType="String" resultType="Member">
		  select 
    	    a.id AS "id",
    	    a.gravatar AS "gravatar",
    	    a.name AS "name",
    	    a.level AS "level",
    	    a.point AS "point",
    	    a.level_point AS "levelPoint",
    	    a.credit AS "credit"
    	from crm_mi_member a
    	<where>
    		a.id = #{memberId}
    	</where>
	</select>
	
	<!-- 根据memberId查询完整信息 -->
	<select id="getCompleteInfo" parameterType="String" resultType="Member">
		  select 
    	    a.id AS "id",
    	    a.level AS "level",
    	    a.nickname AS "nickname",
    	    a.gravatar AS "gravatar",
    	    a.sex AS "sex",
    	    a.birthday AS "birthday",
    	    a.name AS "name",
    	    a.point AS "point",
    	    a.level_point AS "levelPoint",
    	    a.credit AS "credit"
    	from crm_mi_member a
    	<where>
    		a.id = #{memberId}
    	</where>
	</select>
	
	<!-- 前台调用方法  Start-->
	<!-- 检测用户的微信openid和userCode是否存在 -->
	<select id="getByUserCodeOpenId" resultType="Member">
		SELECT 
			a.id AS "id",
			a.usercode AS "usercode",
			a.wechat_openid AS "wechatOpenid",
			a.member_code AS "memberCode",
			a.level AS "level",
			a.type AS "type",
			a.password AS "password",
			a.gravatar AS "gravatar",
			a.mobile AS "mobile",
			a.register_platform AS "registerPlatform",
			a.register_time AS "registerTime",
			a.member_status AS "memberStatus",
			a.usercode_status AS "usercodeStatus",
			a.blackwhite_status AS "blackwhiteStatus",
			a.point AS "point",
			a.level_point AS "levelPoint",
    	    a.credit AS "credit"
		FROM crm_mi_member a
		WHERE a.member_status = 1
				AND (a.wechat_openid = #{userCodeOpenId}
				or a.usercode = #{userCodeOpenId}
				or a.mobile = #{userCodeOpenId})
	</select>
	
	<!-- 检测用户账号和密码是否存在-->
	<select id="getByUserCodePassWord" resultType="Member">
		SELECT 
			a.id AS "id",
			a.usercode AS "usercode",
			a.wechat_openid AS "wechatOpenid",
			a.member_code AS "memberCode",
			a.level AS "level",
			a.type AS "type",
			a.password AS "password",
			a.gravatar AS "gravatar",
			a.mobile AS "mobile",
			a.register_platform AS "registerPlatform",
			a.register_time AS "registerTime",
			a.member_status AS "memberStatus",
			a.usercode_status AS "usercodeStatus",
			a.blackwhite_status AS "blackwhiteStatus",
			a.point AS "point",
			a.level_point AS "levelPoint",
    	    a.credit AS "credit"
		FROM crm_mi_member a
		WHERE a.member_status = 1
			  AND a.usercode = #{userCode}
			  AND a.password = #{passWord}
	</select>
	
	<!-- 根据时间段获取会员注册数量 -->
	<select id="getRegisterNum" resultType="Integer">
		SELECT 
			COUNT(a.id)
		FROM crm_mi_member a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="beginRegisterTime == null or beginRegisterTime == ''">
			    <![CDATA[AND a.register_time >= DATE_ADD(NOW(),INTERVAL -30 DAY)]]>
			</if>
			<if test="beginRegisterTime != null and beginRegisterTime != ''">
				<![CDATA[AND a.register_time >= #{beginRegisterTime}]]>
			</if>
			<if test="endRegisterTime != null and endRegisterTime != ''">
				<![CDATA[AND a.register_time <= #{endRegisterTime}]]>
			</if>
		</where>
	</select>
	
	<select id="statNewRegister" resultType="Member">
	   SELECT DATE_FORMAT(m.register_time,"%Y-%m-%d") AS 'registerTime', count(id) AS 'count'
	   FROM crm_mi_member m 
	   <where>
          m.del_flag = #{DEL_FLAG_NORMAL}
          <if test="beginRegisterTime == null or beginRegisterTime == ''">
              <![CDATA[AND m.register_time >= DATE_ADD(NOW(),INTERVAL -30 DAY)]]>
          </if>
          <if test="beginRegisterTime != null and beginRegisterTime != ''">
              <![CDATA[AND m.register_time >= #{beginRegisterTime}]]>
          </if>
          <if test="endRegisterTime != null and endRegisterTime != ''">
              <![CDATA[AND m.register_time <= #{endRegisterTime}]]>
          </if>
       </where>
	   GROUP BY DATE_FORMAT(m.register_time,"%Y-%m-%d");
	</select>
	
	<select id="findList" resultType="Member">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		<include refid="memberJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="level != null and level != ''">
				AND a.level = #{level}
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="registerPlatform != null and registerPlatform != ''">
				AND a.register_platform = #{registerPlatform}
			</if>
			<if test="memberStatus != null and memberStatus != ''">
				AND a.member_status = #{memberStatus}
			</if>
			<if test="usercodeStatus != null and usercodeStatus != ''">
				AND a.usercode_status = #{usercodeStatus}
			</if>
			<if test="blackwhiteStatus != null and blackwhiteStatus != ''">
				AND a.blackwhite_status = #{blackwhiteStatus}
			</if>
			<if test="searchParameter != null and searchParameter.keyWord != null and searchParameter.keyWord != ''">
				AND (a.usercode LIKE 
					<if test="dbName == 'oracle'">'%'||#{searchParameter.keyWord}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{searchParameter.keyWord}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{searchParameter.keyWord},'%')</if>
				OR a.wechat_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{searchParameter.keyWord}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{searchParameter.keyWord}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{searchParameter.keyWord},'%')</if>
				OR a.member_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{searchParameter.keyWord}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{searchParameter.keyWord}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{searchParameter.keyWord},'%')</if>
				OR a.nickname LIKE 
					<if test="dbName == 'oracle'">'%'||#{searchParameter.keyWord}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{searchParameter.keyWord}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{searchParameter.keyWord},'%')</if>
				OR a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{searchParameter.keyWord}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{searchParameter.keyWord}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{searchParameter.keyWord},'%')</if>
				OR a.mobile LIKE 
					<if test="dbName == 'oracle'">'%'||#{searchParameter.keyWord}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{searchParameter.keyWord}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{searchParameter.keyWord},'%')</if>
				OR a.email LIKE 
					<if test="dbName == 'oracle'">'%'||#{searchParameter.keyWord}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{searchParameter.keyWord}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{searchParameter.keyWord},'%')</if>	
				)
			</if>
			<if test="beginRegisterTime != null and beginRegisterTime != ''">
				<![CDATA[AND register_time >= #{beginRegisterTime}]]>
			</if>
			<if test="endRegisterTime != null and endRegisterTime != ''">
				<![CDATA[AND register_time <= #{endRegisterTime}]]>
			</if>
			<if test="sendUserCodes != null and smsFlag != null">
				AND a.usercode IN
				<foreach item="item" collection="sendUserCodes" separator="," open="(" close=")" index="">
					#{item}
				</foreach>
			</if>
			<if test="openIds != null ">
				AND a.wechat_openid IN
				<foreach item="item" collection="openIds" separator="," open="(" close=")" index="">
					#{item}
				</foreach>
			</if>
		</where>
<!-- 		<choose> -->
<!-- 			<when test="page !=null and page.orderBy != null and page.orderBy != ''"> -->
<!-- 				ORDER BY ${page.orderBy} -->
<!-- 			</when> -->
<!-- 			<otherwise> -->
				ORDER BY a.register_time DESC
<!-- 			</otherwise> -->
<!-- 		</choose> -->
	</select>
	
	<select id="findNotExperienceList" resultType="Member" parameterType="map">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		LEFT JOIN bus_oe_experience_order b ON b.member_id = a.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="notifyMemberVO != null and notifyMemberVO.startDate != null and notifyMemberVO.startDate != ''">
				<![CDATA[AND register_time >= #{notifyMemberVO.startDate}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.endDate != null and notifyMemberVO.endDate != ''">
				<![CDATA[AND register_time <= #{notifyMemberVO.endDate}]]>
			</if>
		</where>
		GROUP BY a.id
		HAVING count(b.id) = 0
		ORDER BY a.register_time DESC
	</select>
	
	<select id="findNotBuyList" resultType="Member" parameterType="map">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		LEFT JOIN bus_oe_experience_order b ON b.member_id = a.id
		LEFT JOIN bus_ob_buy_order c ON c.member_id = a.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="notifyMemberVO != null and notifyMemberVO.startDate != null and notifyMemberVO.startDate != ''">
				<![CDATA[AND b.create_date >= #{notifyMemberVO.startDate}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.endDate != null and notifyMemberVO.endDate != ''">
				<![CDATA[AND b.create_date <= #{notifyMemberVO.endDate}]]>
			</if>
		</where>
		GROUP BY a.id
		HAVING count(c.id) = 0  
		<if test="notifyMemberVO != null and notifyMemberVO.experienceCountStart != null and notifyMemberVO.experienceCountStart != ''">
			<![CDATA[AND count(b.id) >= #{notifyMemberVO.experienceCountStart}]]>
		</if>
		<if test="notifyMemberVO != null and notifyMemberVO.experienceCountEnd != null and notifyMemberVO.experienceCountEnd != ''">
			<![CDATA[AND count(b.id) <= #{notifyMemberVO.experienceCountEnd}]]>
		</if>
		ORDER BY a.register_time DESC
	</select>
	
	<select id="findBuyList" resultType="Member" parameterType="map">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		LEFT JOIN bus_oe_experience_order b ON b.member_id = a.id
		LEFT JOIN bus_ob_buy_order c ON c.member_id = a.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="notifyMemberVO != null and notifyMemberVO.startDate != null and notifyMemberVO.startDate != ''">
				<![CDATA[AND c.create_date >= #{notifyMemberVO.startDate}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.endDate != null and notifyMemberVO.endDate != ''">
				<![CDATA[AND c.create_date <= #{notifyMemberVO.endDate}]]>
			</if>
		</where>
		GROUP BY a.id
		HAVING 1=1
			<if test="notifyMemberVO != null and notifyMemberVO.experienceCountStart != null and notifyMemberVO.experienceCountStart != ''">
				<![CDATA[AND count(b.id) >= #{notifyMemberVO.experienceCountStart}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.experienceCountEnd != null and notifyMemberVO.experienceCountEnd != ''">
				<![CDATA[AND count(b.id) <= #{notifyMemberVO.experienceCountEnd}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.buyCountStart != null and notifyMemberVO.buyCountStart != ''">
				<![CDATA[AND count(c.id) >= #{notifyMemberVO.buyCountStart}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.buyCountEnd != null and notifyMemberVO.buyCountEnd != ''">
				<![CDATA[AND count(c.id) <= #{notifyMemberVO.buyCountEnd}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.tradeMoneyStart != null and notifyMemberVO.tradeMoneyStart != ''">
				<![CDATA[AND sum(c.money_total) >= #{notifyMemberVO.tradeMoneyStart}]]>
			</if>
			<if test="notifyMemberVO != null and notifyMemberVO.tradeMoneyEnd != null and notifyMemberVO.tradeMoneyEnd != ''">
				<![CDATA[AND sum(c.money_total) <= #{notifyMemberVO.tradeMoneyEnd}]]>
			</if>
		ORDER BY a.register_time DESC
	</select>
	
	<select id="findExperienceRemindList" resultType="Member">
	  	  SELECT a.id AS "id",
	  	  		 a.usercode AS "usercode"
	  	   FROM crm_mi_member a 
<!-- 		LEFT JOIN crm_ns_member_notify b ON a.id = b.member_id -->
		LEFT JOIN bus_oe_experience_order c ON c.member_id = a.id
		WHERE DATEDIFF(NOW(), a.register_time)=10
		  GROUP BY a.id
		  HAVING COUNT(c.id) = 0
	</select>
	
	<select id="findOneDayDebtWarningList" resultType="Member">
	  	  SELECT a.id AS "id",
	  	  		 a.usercode AS "usercode"
	  	   FROM crm_mi_member a 
<!-- 		LEFT JOIN crm_ns_member_notify b ON a.id = b.member_id -->
		LEFT JOIN bus_oe_experience_order c ON c.member_id = a.id
		WHERE DATEDIFF(NOW(), c.settlement_time)=1
		  AND c.arrearage_amount > 0
		  GROUP BY a.id
	</select>
	
	<select id="findOneWeekDebtWarningList" resultType="Member">
	  	  SELECT a.id AS "id",
	  	  		 a.usercode AS "usercode"
	  	   FROM crm_mi_member a 
<!-- 		LEFT JOIN crm_ns_member_notify b ON a.id = b.member_id -->
		LEFT JOIN bus_oe_experience_order c ON c.member_id = a.id
		WHERE DATEDIFF(NOW(), c.settlement_time)=7
		  AND c.arrearage_amount > 0
		  GROUP BY a.id
	</select>
	
	<select id="findAllList" resultType="Member">
		SELECT 
			<include refid="memberColumns"/>
		FROM crm_mi_member a
		<include refid="memberJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO crm_mi_member(
			id,
			usercode,
			wechat_code,
			wechat_openid,
			member_code,
			level,
			type,
			password,
			password_pay,
			nickname,
			gravatar,
			sex,
			birthday,
			age,
			job,
			income,
			sign,
			mobile,
			email,
			name,
			id_card,
			company,
			register_platform,
			register_time,
			recommend_member_id,
			member_status,
			usercode_status,
			blackwhite_status,
			blackwhite_remark,
			point,
			level_point,
			credit,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{usercode},
			#{wechatCode},
			#{wechatOpenid},
			#{memberCode},
			#{level},
			#{type},
			#{password},
			#{passwordPay},
			#{nickname},
			#{gravatar},
			#{sex},
			#{birthday},
			#{age},
			#{job},
			#{income},
			#{sign},
			#{mobile},
			#{email},
			#{name},
			#{idCard},
			#{company},
			#{registerPlatform},
			#{registerTime},
			<choose>
				<when test="recommendMember != null and recommendMember.id != null and recommendMember.id != ''">
					#{recommendMember.id},				
				</when>
				<otherwise>
					NULL,
				</otherwise>
			</choose>
			#{memberStatus},
			#{usercodeStatus},
			#{blackwhiteStatus},
			#{blackwhiteRemark},
			#{point},
			#{levelPoint},
			#{credit},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE crm_mi_member SET
			usercode = #{usercode},
			wechat_code = #{wechatCode},
			wechat_openid = #{wechatOpenid},
			member_code = #{memberCode}, 	
			level = #{level},
			type = #{type},
			password = #{password},
			password_pay = #{passwordPay},
			nickname = #{nickname},
			gravatar = #{gravatar},
			sex = #{sex},
			birthday = #{birthday},
			age = #{age},
			job = #{job},
			income = #{income},
			sign = #{sign},
			mobile = #{mobile},
			email = #{email},
			name = #{name},
			id_card = #{idCard},
			company = #{company},
			register_platform = #{registerPlatform},
			register_time = #{registerTime},
			recommend_member_id = #{recommendMember.id},
			member_status = #{memberStatus},
			usercode_status = #{usercodeStatus},
			blackwhite_status = #{blackwhiteStatus},
			blackwhite_remark = #{blackwhiteRemark},
			arrearage_remark = #{arrearageRemark},
			point = #{point},
			level_point = #{levelPoint},
			credit = #{credit},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="updateWechatOpenid">
		UPDATE crm_mi_member a SET a.wechat_openid = #{wechatOpenid} WHERE a.id = #{id}
	</update>
	
	<update id="updateClearWechatOpenid">
		UPDATE crm_mi_member a SET a.wechat_openid = NULL WHERE a.wechat_openid = #{wechatOpenid}
	</update>
	
	<update id="delete">
		UPDATE crm_mi_member SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<delete id="remove">
		DELETE FROM crm_mi_member WHERE id = #{id}
	</delete>
</mapper>