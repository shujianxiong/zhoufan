<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinazhoufan.admin.modules.spm.dao.qa.QuestionnaireDao">
    
	<sql id="questionnaireColumns">
		a.id AS "id",
		a.name AS "name",
		a.type AS "type",
		a.status AS "status",
		a.title AS "title",
		a.description AS "description",
		a.display_type AS "displayType",
		a.reward_point_flag AS "rewardPointFlag",
		a.reward_point_num AS "rewardPointNum",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="questionnaireJoins">
	</sql>
    
	<select id="get" resultType="Questionnaire">
		SELECT 
			<include refid="questionnaireColumns"/>
		FROM spm_qa_questionnaire a
		<include refid="questionnaireJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Questionnaire">
		SELECT 
			<include refid="questionnaireColumns"/>
		FROM spm_qa_questionnaire a
		<include refid="questionnaireJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="displayType != null and displayType != ''">
				AND a.display_type = #{displayType}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Questionnaire">
		SELECT 
			<include refid="questionnaireColumns"/>
		FROM spm_qa_questionnaire a
		<include refid="questionnaireJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 查询用户回答的答卷，问题，答案 -->
	<!-- 备注：用户在提交答卷的时候需要往spm_qa_respondents表里面插入答卷Id和会员Id,
	同时用户选择答案的时候需要往spm_qa_respondents_ans表里面添加数据，需要提供问卷和问题关联表的Id,
	如果一个问题是多个选项，那么关联表的Id是同一个，否则就是每选择一个答案就要提供一个关联表ID -->
	<resultMap id="getByIdResult" type="Questionnaire">
		<result column="id" 	property="id"/>
		<result column="name" 	property="name"/>
		<collection property="questionnaireQueList" ofType="QuestionnaireQue">
			<result column="questionnaireQueList.id" 							property="id"/>
			<result column="questionnaireQueList.levelNum" 						property="levelNum"/>
			<result column="questionnaireQueList.baseQuestion.id" 				property="baseQuestion.id"/>
			<result column="questionnaireQueList.baseQuestion.name" 			property="baseQuestion.name"/>
			<result column="questionnaireQueList.baseQuestion.type" 			property="baseQuestion.type"/>
			<result column="questionnaireQueList.baseQuestion.answerType" 		property="baseQuestion.answerType"/>
			<result column="questionnaireQueList.baseQuestion.description" 	property="baseQuestion.description"/>
			<collection property="baseQuestion.answerList" ofType="BaseAnswer">
				<result column="baseQuestion.answerList.id" 	property="id"/>
				<result column="baseQuestion.answerList.name" property="name"/>
			</collection>
		</collection>		
	</resultMap>
	<!-- 备注：根据答卷的id在问卷和问题关联表中查询数据是否存在，
	存在就提供问题Id在答案表查询问题相关答案，
	根据问卷和问题Id在用户选择答案表查询答案，
	问题答案有单选，多选，填写，answerText为用户填写答案，两个答案在前台做比较，判断回答选项-->
	<select id="getInfoByRespondentsId" resultMap="getByIdResult">
		SELECT 
			q.id 			AS "id",
			q.name 			AS "name",
			bq.id 				AS "questionnaireQueList.id",
			bq.name 			AS "questionnaireQueList.name",
			bq.type 			AS "questionnaireQueList.type",
			bq.description 		AS "questionnaireQueList.description",
			ba.id 					AS "questionnaireQueList.answerList.id",
			ba.name 				AS "questionnaireQueList.answerList.name"
		FROM spm_qa_questionnaire q 
		LEFT JOIN spm_qa_respondents r 			ON r.questionnaire_id = q.id
		LEFT JOIN spm_qa_questionnaire_que qq 	ON qq.questionnaire_id = q.id
		LEFT JOIN spm_qa_base_question bq 		ON bq.id = qq.base_question_id
		LEFT JOIN spm_qa_base_answer ba 		ON ba.base_question_id = bq.id 
		<!-- 这里应该修改，应该传参数答卷ID和答卷里的问卷ID，查询问卷，同时在查答卷答案时，带上答卷ID的查询条件，如下（挪到SPM_QA_RESPONDENTS答卷表的dao中） -->
		<!-- and ans.respondents_id = spm_qa_respondents.id) -->
		WHERE q.del_flag = '0'
		AND r.id = #{respondentsId}
	</select>
	
	<select id="getInfoById" resultMap="getByIdResult">
		SELECT
			q.id 			AS "id",
			q.name 			AS "name",
			qq.id 			AS "questionnaireQueList.id",
			qq.level_num 	AS "questionnaireQueList.levelNum",
			bq.id 				AS "questionnaireQueList.baseQuestion.id",
			bq.name 			AS "questionnaireQueList.baseQuestion.name",
			bq.type 			AS "questionnaireQueList.baseQuestion.type",
			bq.answer_type 			AS "questionnaireQueList.baseQuestion.answerType",
			ba.id 					AS "baseQuestion.answerList.id",
			ba.name 				AS "baseQuestion.answerList.name"
		FROM spm_qa_questionnaire q 
		LEFT JOIN spm_qa_questionnaire_que qq 	ON qq.questionnaire_id = q.id
		LEFT JOIN spm_qa_base_question bq 		ON bq.id = qq.base_question_id
		LEFT JOIN spm_qa_base_answer ba 		ON ba.base_question_id = bq.id 
		WHERE q.del_flag = '0'
		AND qq.del_flag = '0'
		AND q.id = #{id}
	</select>
	
	<insert id="insert">
		INSERT INTO spm_qa_questionnaire(
			id,
			name,
			type,
			status,
			title,
			description,
			display_type,
			reward_point_flag,
			reward_point_num,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{type},
			#{status},
			#{title},
			#{description},
			#{displayType},
			#{rewardPointFlag},
			#{rewardPointNum},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE spm_qa_questionnaire SET 	
			name = #{name},
			type = #{type},
			status = #{status},
			title = #{title},
			description = #{description},
			display_type = #{displayType},
			reward_point_flag = #{rewardPointFlag},
			reward_point_num = #{rewardPointNum},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE spm_qa_questionnaire SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<resultMap id="findCateBaseQuestionResult" type="com.chinazhoufan.admin.modules.spm.entity.qa.Questionnaire" >
		<collection property="questions" ofType="Questionnaire">
			<result column="questions.id" property="baseQuestionId"/>
			<result column="id" property="id"/>
		</collection>
    </resultMap>
	
	<select id="findNavCateBaseQuestion" resultMap="findCateBaseQuestionResult">
		select 
			id AS "id",
			questionnaire_id AS "questionnaireId",
			base_question_id AS "questions.id"
		from 
		spm_qa_questionnaire_que s1
		where  s1.questionnaire_id = #{questionnaireId}
		and s1.base_question_id IN
		<foreach collection="questions" item="question" separator="," open="(" close=")">
			 #{question.id}
		</foreach>
	</select>
	
	<delete id="remove">
		delete from spm_qa_questionnaire_que 
		where 
		questionnaire_id = #{questionnaireId}
		and
		base_question_id = #{baseQuestionId}
		and id = #{id}
	</delete>
	
	<!-- 查询问卷问题数 -->
	<select id="getQueNum" resultType="long">
		select count(1) 
		  from spm_qa_questionnaire_que a
		 where a.del_flag = '0'
		   and a.questionnaire_id = #{id}
	</select>
	
	<!-- 查询问卷问题数 -->
	<select id="getQuePoint" resultType="long">
		select sum(IFNULL(point,0)) 
		  from spm_qa_questionnaire_que a
		 where a.del_flag = '0'
		   and a.questionnaire_id = #{id}
	</select>
	
</mapper>