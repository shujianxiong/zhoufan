<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinazhoufan.admin.modules.lgt.dao.ps.PropertyDao">
	
	<resultMap id="propertyCacheResult" type="com.chinazhoufan.admin.modules.lgt.entity.ps.Property">
		<result property="id" column="id"/>
		<result property="propName" column="propName"/>
		<result property="propType" column="propType"/>
		<result property="suitType" column="suitType"/>
		<result property="valueType" column="valueType"/>
		<result property="orderNo" column="orderNo"/>
		<result property="delFlag" column="delFlag"/>
		<result property="produceFlag" column="produceFlag"/>
		<result property="necessaryFlag" column="necessaryFlag"/>
		<result property="filterFlag" column="filterFlag"/>
		<result property="showFlag" column="showFlag"/>
		<result property="titleFlag" column="titleFlag"/>
		
		<collection property="categoryList" ofType="Categories">
			<result property="id" column="categoryList.id"/>
			<result property="categoryName" column="categoryList.categoryName"/>
		</collection>
		<collection property="propvalueList" ofType="Propvalue">
			<result property="id" column="propvalueList.id"/>
			<result property="pvalueName" column="propvalueList.pvalueName"/>
			<result property="pvalueNickname" column="propvalueList.pvalueNickname"/>
			<result property="orderNo" column="propvalueList.orderNo"/>
		</collection>
	</resultMap>
	
	<sql id="propertyColumns">
		a.id AS "id",
		a.prop_name AS "propName",
		a.prop_type AS "propType",
		a.suit_type AS "suitType",
		a.value_type AS "valueType",
		a.order_no AS "orderNo",
		a.produce_flag AS "produceFlag",
		a.filter_flag AS "filterFlag",
		a.create_by AS "createBy.id",
		u.name AS "createBy.name", 
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		u.name AS "updateBy.name",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.show_flag AS "showFlag",
		a.title_flag AS "titleFlag",
		a.necessary_flag AS "necessaryFlag"
	</sql>
	
	<sql id="propertyJoins">
		LEFT JOIN sys_user u ON u.id=a.create_by
	</sql>
	
	<select id="get" resultType="Property">
		SELECT 
			<include refid="propertyColumns"/>
		FROM lgt_ps_property a
		<include refid="propertyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	
	<!-- 查询所有属性以及属性关联分类，属性关联值 -->
	<select id="findPropertyAll" resultMap="propertyCacheResult">
		SELECT
			a.id AS "id",
			a.prop_name AS "propName",
			a.prop_type AS "propType",
			a.suit_type AS "suitType",
			a.value_type AS "valueType",
			a.order_no AS "orderNo",
			a.produce_flag AS "produceFlag",
			a.del_flag AS "delFlag",
			a.necessary_flag AS "necessaryFlag",
			a.filter_flag AS "filterFlag",
			a.show_flag AS "showFlag",
			a.title_flag AS "titleFlag",
			b.id AS "categoryList.id",
			b.category_name AS "categoryList.categoryName",
			c.id AS "propvalueList.id",
			c.pvalue_name AS "propvalueList.pvalueName",
			c.pvalue_nickname AS "propvalueList.pvalueNickname",
			c.order_no AS "propvalueList.orderNo"
		FROM lgt_ps_property a
		left join lgt_ps_category_prop d on d.pid=a.id
		left join lgt_ps_category b on b.id=d.cid
		left JOIN lgt_ps_propvalue c on c.pid=a.id
		WHERE a.del_flag=#{0}
		AND (c.del_flag=#{1} OR c.del_flag is null) <!-- 注：左连接，可以完全返回查询主表里面的所有记录，但是因为这里添加上了丛表的条件，导致那些丛表没有与主表匹配记录的主表记录也一并过滤掉了，所以这里需要加上c.del_flag is null,来让那些过滤掉的数据显示回来，这样结果才对 -->
		ORDER BY a.order_no
	</select>
	
	<!-- 查询所有属性 -->
	<select id="findList" resultType="Property" >
		SELECT
			<include refid="propertyColumns"/>
		FROM lgt_ps_property a
		<include refid="propertyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="propName != null and propName != ''">
				AND a.prop_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{propName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{propName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{propName},'%')</if>
			</if>
			<if test="category != null and category.id != ''">
				AND a.id in (select p.pid from lgt_ps_category_prop p where p.cid=#{category.id} )
			</if>
			<if test="suitType != null and suitType != ''">
			     AND a.suit_type = #{suitType}
			</if>
			<if test="valueType != null and valueType != ''">
			     AND a.value_type = #{valueType}
			</if>
			<if test="propType != null and propType != ''">
                 AND a.prop_type = #{propType}
            </if>
            <if test="necessaryFlag != null and necessaryFlag != ''">
                 AND a.necessary_flag = #{necessaryFlag}
            </if>
            <if test="filterFlag != null and filterFlag != ''">
                 AND a.filter_flag = #{filterFlag}
            </if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.order_no
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="property">
		SELECT 
			<include refid="propertyColumns"/>
		FROM lgt_ps_property a
		<include refid="propertyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.order_no
			</otherwise>
		</choose>
	</select>
	
	<!-- 查询所有属性（根据条件）for Api -->
	<resultMap id="PropertyDataResult" type="com.chinazhoufan.admin.modules.lgt.entity.ps.Property">
		<result column="id" 			property="id"/>
		<result column="propName" 		property="propName"/>
		<result column="propType" 		property="propType"/>
		<result column="suitType" 		property="suitType"/>
		<result column="valueType" 		property="valueType"/>
		<result column="orderNo" 		property="orderNo"/>
		<result column="delFlag" 		property="delFlag"/>
		<result column="necessaryFlag" 	property="necessaryFlag"/>
		<result column="filterFlag"     property="filterFlag"/>
		<result column="showFlag"     	property="showFlag"/>
		<result column="titleFlag"     	property="titleFlag"/>
		<result column="produceFlag" 	property="produceFlag"/>
		<collection property="propvalueList" ofType="Propvalue">
			<result column="propvalueList.id" 				property="id"/>
			<result column="propvalueList.pvalueName" 		property="pvalueName"/>
			<result column="propvalueList.pvalueNickname" 	property="pvalueNickname"/>
			<result column="propvalueList.orderNo" 			property="orderNo"/>
		</collection>
	</resultMap>
	<select id="findListData" resultMap="PropertyDataResult" >
		SELECT
			a.id 				AS "id",
			a.prop_name 		AS "propName",
			a.prop_type 		AS "propType",
			a.suit_type 		AS "suitType",
			a.value_type 		AS "valueType",
			a.order_no 			AS "orderNo",
			a.del_flag 			AS "delFlag",
			a.necessary_flag 	AS "necessaryFlag",
			a.filter_flag       AS "filterFlag",
			a.show_flag 		AS "showFlag",
			a.title_flag 		AS "titleFlag",
			a.produce_flag 		AS "produceFlag",
			pv.id 					AS "propvalueList.id",
			pv.pvalue_name 			AS "propvalueList.pvalueName",
			pv.pvalue_nickname 		AS "propvalueList.pvalueNickname",
			pv.order_no 			AS "propvalueList.orderNo"
		FROM lgt_ps_property a
		LEFT JOIN lgt_ps_propvalue pv 		ON pv.pid=a.id
		LEFT JOIN lgt_ps_category_prop cp	ON cp.pid=a.id
		LEFT JOIN lgt_ps_category c 		ON c.id=cp.cid
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="propName != null and propName != ''">
				AND a.prop_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{propName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{propName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{propName},'%')</if>
			</if>
			<if test="propType != null and propType != ''">
				AND a.prop_type = #{propType}
			</if>
			<if test="suitType != null and suitType != ''">
				AND a.suit_type = #{suitType}
			</if>
			<if test="valueType != null and valueType != ''">
				AND a.value_type = #{valueType}
			</if>
			<if test="produceFlag != null and produceFlag != ''">
				AND a.produce_flag = #{produceFlag}
			</if>
			<if test="category != null and category.id != null and category.id != ''">
				AND c.id = #{category.id}
			</if>
			<if test="filterFlag != null and filterFlag != ''">
			     AND a.filter_flag = #{filterFlag}
			</if>
		</where>
		ORDER BY a.order_no
	</select>
	
	<!-- 根据是否筛选可用状态  列出所有属性及对应的属性值 -->
	<resultMap id="propertyWithPropValueResult" type="com.chinazhoufan.admin.modules.lgt.entity.ps.Property">
        <result property="id" column="id"/>
        <result property="propName" column="propName"/>
        <result property="propType" column="propType"/>
        <result property="suitType" column="suitType"/>
        <result property="valueType" column="valueType"/>
        <result property="orderNo" column="orderNo"/>
        <result property="delFlag" column="delFlag"/>
        <result property="produceFlag" column="produceFlag"/>
		<result column="showFlag"     	property="showFlag"/>
		<result column="titleFlag"     	property="titleFlag"/>
        <result property="necessaryFlag" column="necessaryFlag"/>
        <result property="filterFlag" column="filterFlag"/>
        
        <collection property="propvalueList" ofType="Propvalue">
            <result property="id" column="propvalueList.id"/>
            <result property="pvalueName" column="propvalueList.pvalueName"/>
            <result property="pvalueNickname" column="propvalueList.pvalueNickname"/>
            <result property="orderNo" column="propvalueList.orderNo"/>
        </collection>
    </resultMap>
	<select id="listAllPropertyWithPropValueByFilterFlag" resultMap="propertyWithPropValueResult">
	   SELECT
            a.id AS "id",
            a.prop_name AS "propName",
            a.prop_type AS "propType",
            a.suit_type AS "suitType",
            a.value_type AS "valueType",
            a.order_no AS "orderNo",
            a.produce_flag AS "produceFlag",
            a.del_flag AS "delFlag",
            a.necessary_flag AS "necessaryFlag",
            a.filter_flag AS "filterFlag",
            a.show_flag AS "showFlag",
			a.title_flag AS "titleFlag",
            
            c.id AS "propvalueList.id",
            c.pvalue_name AS "propvalueList.pvalueName",
            c.pvalue_nickname AS "propvalueList.pvalueNickname",
            c.order_no AS "propvalueList.orderNo"
        
        FROM lgt_ps_property a
        LEFT JOIN lgt_ps_propvalue c on c.pid=a.id
        WHERE a.del_flag=#{DEL_FLAG_NORMAL} 
        AND a.filter_flag = #{filterFlag}
        ORDER BY a.order_no
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO lgt_ps_property(
			id,
			prop_name,
			prop_type,
			suit_type,
			value_type,
			order_no,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			necessary_flag,
			produce_flag,
			filter_flag,
			del_flag,
			show_flag,
			title_flag

		) VALUES (
			NULL,
			#{propName},
			#{propType},
			#{suitType},
			#{valueType},
			#{orderNo},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{necessaryFlag},
			#{produceFlag},
			#{filterFlag},
			#{delFlag},
			#{showFlag},
			#{titleFlag}
		)
	</insert>
	
	<insert id="insertCategoryProp">
		INSERT INTO lgt_ps_category_prop(
			cid,
			pid
		) VALUES (
			#{0},
			#{1}
		)
	</insert>
	
	
	<update id="update">
		UPDATE lgt_ps_property SET 	
			prop_name = #{propName},
			prop_type = #{propType},
			suit_type = #{suitType},
			value_type = #{valueType},
			necessary_flag = #{necessaryFlag},
			filter_flag = #{filterFlag},
			order_no = #{orderNo},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			produce_flag = #{produceFlag},
			show_flag = #{showFlag},
			title_flag = #{titleFlag}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE lgt_ps_property SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteCategoryProp">
		DELETE a FROM lgt_ps_category_prop AS a
		WHERE a.pid=#{id}
	</delete>
	
</mapper>