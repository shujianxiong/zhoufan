<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinazhoufan.admin.modules.lgt.dao.ps.ProducePropvalueDao">
    
	<sql id="producePropvalueColumns">
		a.id AS "id",
		a.produce_id AS "produce.id",
		a.pid AS "property.id",
		a.pvid AS "propvalue.id",
		a.pvalue AS "pvalue",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="producePropvalueJoins">
	</sql>
    
	<select id="get" resultType="ProducePropvalue">
		SELECT 
			<include refid="producePropvalueColumns"/>
		FROM lgt_ps_produce_propvalue a
		<include refid="producePropvalueJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ProducePropvalue">
		SELECT 
			<include refid="producePropvalueColumns"/>
		FROM lgt_ps_produce_propvalue a
		<include refid="producePropvalueJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ProducePropvalue">
		SELECT 
			<include refid="producePropvalueColumns"/>
		FROM lgt_ps_produce_propvalue a
		<include refid="producePropvalueJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	    
    <resultMap id="producePropvalueResult" type="ProducePropvalue">
    	<result column="id" property="id"/>
    	<result column="property.id" property="property.id"/>
    	<result column="property.propName" property="property.propName"/>
    	<result column="pvalue" property="pvalue"/>
    </resultMap>
    
    <!-- 因为界面上，商品属性的，价格规格类是按照降序排列的，下面的产品规格需要和上面的对应，故返回数据也降序排列 -->
	<select id="findListByGoodsId" resultType="ProducePropvalue">
		SELECT 
			a.id AS "id",
			p.id AS 'produce.id',
			p.name AS 'produce.name',
			p.title AS 'produce.title',
			a.pid AS "property.id",
			b.prop_name AS "property.propName",
			a.pvid AS "propvalue.id",
			IFNULL(v.pvalue_name, a.pvalue)  AS "propvalue.pvalueName",
			IFNULL(v.pvalue_nickname, a.pvalue)  AS "propvalue.pvalueNickname"
		FROM lgt_ps_produce_propvalue a  
		LEFT JOIN lgt_ps_property b ON b.id = a.pid
		LEFT JOIN lgt_ps_produce p ON a.produce_id = p.id
		LEFT JOIN lgt_ps_propvalue v ON v.id = a.pvid
		WHERE 
			p.goods_id = #{goodsId} 
			AND p.del_flag = #{delFlag}
		ORDER BY p.id, a.pid desc
	</select>
	
	
	<insert id="insert">
		INSERT INTO lgt_ps_produce_propvalue(
			id,
			produce_id,
			pid,
			pvid,
			pvalue,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{produce.id},
			#{property.id},
			#{propvalue.id},
			#{pvalue},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE lgt_ps_produce_propvalue SET 	
			produce_id = #{produce.id},
			pid = #{property.id},
			pvid = #{propvalue.id},
			pvalue = #{pvalue},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE lgt_ps_produce_propvalue SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteByProduce" parameterType="Produce">
		UPDATE lgt_ps_produce_propvalue SET 
            del_flag = #{DEL_FLAG_DELETE}
        WHERE produce_id = #{id}
	</delete>
	
</mapper>